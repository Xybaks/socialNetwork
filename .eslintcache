[{"F:\\js\\project\\socialNetwork\\src\\index.tsx":"1","F:\\js\\project\\socialNetwork\\src\\redux\\store.ts":"2","F:\\js\\project\\socialNetwork\\src\\components\\Header\\Header.tsx":"3","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"4","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"5","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Dialogs.tsx":"6","F:\\js\\project\\socialNetwork\\src\\App.tsx":"7","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\Profile.tsx":"8","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"9","F:\\js\\project\\socialNetwork\\src\\components\\Navbar\\Navbar.tsx":"10","F:\\js\\project\\socialNetwork\\src\\components\\Settings\\Settings.tsx":"11","F:\\js\\project\\socialNetwork\\src\\components\\News\\News.tsx":"12","F:\\js\\project\\socialNetwork\\src\\components\\Music\\Music.tsx":"13","F:\\js\\project\\socialNetwork\\src\\redux\\profileReducer.ts":"14","F:\\js\\project\\socialNetwork\\src\\redux\\dialogsReducer.ts":"15","F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friend\\Friend.tsx":"16","F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friends.tsx":"17","F:\\js\\project\\socialNetwork\\src\\redux\\redux-store.ts":"18","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogItem\\Dialog.tsx":"19","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Message\\Message.tsx":"20","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"21","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogsContainer.tsx":"22","F:\\js\\project\\socialNetwork\\src\\StoreContext.tsx":"23","F:\\js\\project\\socialNetwork\\src\\redux\\usersReducer.ts":"24","F:\\js\\project\\socialNetwork\\src\\components\\Users\\Users.tsx":"25","F:\\js\\project\\socialNetwork\\src\\components\\Users\\UsersContainer.tsx":"26","F:\\js\\project\\socialNetwork\\src\\components\\common\\PreLoader\\PreLoader.tsx":"27","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileContainer.tsx":"28","F:\\js\\project\\socialNetwork\\src\\reportWebVitals.ts":"29","F:\\js\\project\\socialNetwork\\src\\redux\\authReducer.ts":"30","F:\\js\\project\\socialNetwork\\src\\components\\Header\\HeaderContainer.tsx":"31","F:\\js\\project\\socialNetwork\\src\\api\\api.ts":"32","F:\\js\\project\\socialNetwork\\src\\hoc\\AuthRedirect.tsx":"33","F:\\js\\project\\socialNetwork\\src\\components\\common\\PreLoader\\ProfileStatus.tsx":"34","F:\\js\\project\\socialNetwork\\src\\components\\Login\\Login.tsx":"35"},{"size":705,"mtime":1612169401358,"results":"36","hashOfConfig":"37"},{"size":5587,"mtime":1612079884905,"results":"38","hashOfConfig":"37"},{"size":600,"mtime":1614779025592,"results":"39","hashOfConfig":"37"},{"size":1281,"mtime":1612171035647,"results":"40","hashOfConfig":"37"},{"size":554,"mtime":1611739717000,"results":"41","hashOfConfig":"37"},{"size":1830,"mtime":1616314354469,"results":"42","hashOfConfig":"37"},{"size":2099,"mtime":1614780084754,"results":"43","hashOfConfig":"37"},{"size":855,"mtime":1615566517341,"results":"44","hashOfConfig":"37"},{"size":1856,"mtime":1615568575322,"results":"45","hashOfConfig":"37"},{"size":1341,"mtime":1612212901996,"results":"46","hashOfConfig":"37"},{"size":135,"mtime":1611739717000,"results":"47","hashOfConfig":"37"},{"size":119,"mtime":1611739717000,"results":"48","hashOfConfig":"37"},{"size":123,"mtime":1611739717000,"results":"49","hashOfConfig":"37"},{"size":4847,"mtime":1615614855508,"results":"50","hashOfConfig":"37"},{"size":2709,"mtime":1616314786969,"results":"51","hashOfConfig":"37"},{"size":375,"mtime":1611474272568,"results":"52","hashOfConfig":"37"},{"size":766,"mtime":1611474263801,"results":"53","hashOfConfig":"37"},{"size":1279,"mtime":1614724531303,"results":"54","hashOfConfig":"37"},{"size":550,"mtime":1611739717000,"results":"55","hashOfConfig":"37"},{"size":276,"mtime":1611739717000,"results":"56","hashOfConfig":"37"},{"size":1625,"mtime":1613753120521,"results":"57","hashOfConfig":"37"},{"size":1730,"mtime":1616314716400,"results":"58","hashOfConfig":"37"},{"size":474,"mtime":1611993015099,"results":"59","hashOfConfig":"37"},{"size":6590,"mtime":1615576921783,"results":"60","hashOfConfig":"37"},{"size":2805,"mtime":1614759079261,"results":"61","hashOfConfig":"37"},{"size":3121,"mtime":1615453528738,"results":"62","hashOfConfig":"37"},{"size":199,"mtime":1613506748391,"results":"63","hashOfConfig":"37"},{"size":2608,"mtime":1615571911725,"results":"64","hashOfConfig":"37"},{"size":425,"mtime":1611739717000,"results":"65","hashOfConfig":"37"},{"size":1882,"mtime":1614781445540,"results":"66","hashOfConfig":"37"},{"size":920,"mtime":1614779288260,"results":"67","hashOfConfig":"37"},{"size":2148,"mtime":1615578161269,"results":"68","hashOfConfig":"37"},{"size":889,"mtime":1615453528753,"results":"69","hashOfConfig":"37"},{"size":1935,"mtime":1615614564983,"results":"70","hashOfConfig":"37"},{"size":1129,"mtime":1615631338847,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"eq6yew",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\js\\project\\socialNetwork\\src\\index.tsx",[],["157","158"],"F:\\js\\project\\socialNetwork\\src\\redux\\store.ts",[],"F:\\js\\project\\socialNetwork\\src\\components\\Header\\Header.tsx",["159"],"import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport emblem from \"../pictures/ufoEmblem256x256.png\";\nimport s from \"./Header.module.css\";\n\ntype HeaderPropsType = {\n    isAuth: boolean\n    login: string | null\n    getAuthUserData:() => void\n}\nconst Header = (props: HeaderPropsType) => {\n    return <header className={s.header}>\n        <img src={emblem}/>\n        <div className={s.loginBlock}>\n            {props.isAuth\n                ? props.login\n                : <NavLink to={'/login'}> Login</NavLink>\n            }\n\n        </div>\n    </header>\n}\nexport default Header;",["160","161"],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["162"],"import React from 'react';\nimport s from \"./Post.module.css\";\nimport pic from \"../../../pictures/avatar.jpg\";\nimport {PostsType} from \"../../../../redux/store\";\n\n\n\nconst Post: React.FC<PostsType> = (props) =>\n{\n    let like: string;\n    if (props.likesCount === 1) like = \"like\"\n    else like = \"likes\"\n    return (\n        <div className={`${s.item} ${s.active}`}>\n            <img src={pic}/>\n            {props.message}\n            <div className={s.item}> {props.likesCount} {like} {\n\n            }</div>\n        </div>\n\n    )\n}\n\nexport default Post;","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Dialogs.tsx",[],"F:\\js\\project\\socialNetwork\\src\\App.tsx",[],["163","164"],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\Profile.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["165","166","167"],"F:\\js\\project\\socialNetwork\\src\\components\\Navbar\\Navbar.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Settings\\Settings.tsx",["168"],"import s from \"./Settings.module.css\"\n\nfunction Settings (){\n    return(\n        <div > Settings </div>\n    )\n}\nexport default Settings","F:\\js\\project\\socialNetwork\\src\\components\\News\\News.tsx",["169"],"import s from \"./News.module.css\"\n\nfunction News (){\n    return(\n        <div > News </div>\n    )\n}\nexport default News",["170","171"],"F:\\js\\project\\socialNetwork\\src\\components\\Music\\Music.tsx",["172"],"import s from \"./Music.module.css\"\n\nfunction Music (){\n    return(\n        <div > Music </div>\n    )\n}\nexport default Music","F:\\js\\project\\socialNetwork\\src\\redux\\profileReducer.ts",[],"F:\\js\\project\\socialNetwork\\src\\redux\\dialogsReducer.ts",[],"F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friend\\Friend.tsx",["173"],"F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friends.tsx",[],"F:\\js\\project\\socialNetwork\\src\\redux\\redux-store.ts",[],["174","175"],"F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogItem\\Dialog.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Message\\Message.tsx",[],["176","177"],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["178"],"import React from 'react';\nimport MyPosts from \"./MyPosts\";\nimport {addPostActionCreator, updateNewPostActionCreator} from \"../../../redux/profileReducer\";\nimport {PostsType} from \"../../../redux/store\";\nimport {RootReduxStateType} from \"../../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\n\n\n\n//типизация стэйта для отдачи в пропсы\ntype MapStatePropsType = {\n    posts: Array<PostsType>\n    newPostText: string\n}\n// типизация функций для отдачи в пропсы\ntype MapDispatchPropsType = {\n    addPost: (newPostText: string) => void\n    updateNewPostText : (newText: string) =>void\n}\n// функция получения из redux-store части стэйта (dialogsPage)\nlet mapStateToProps = (state: RootReduxStateType) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText:state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        //функция добавления поста в профайле\n        addPost: (newPostText: string)=> {\n            dispatch(addPostActionCreator(newPostText))\n        },\n        //  функция обновления вводимого текста в профайле\n        updateNewPostText: (newText: string) => {\n            dispatch(updateNewPostActionCreator(newText))\n        }\n    }\n}\n\nconst MyPostsContainer = connect <MapStatePropsType, MapDispatchPropsType, {}, RootReduxStateType>\n(mapStateToProps,mapDispatchToProps)(MyPosts);\n\n\nexport default MyPostsContainer","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"F:\\js\\project\\socialNetwork\\src\\StoreContext.tsx",[],"F:\\js\\project\\socialNetwork\\src\\redux\\usersReducer.ts",["179","180"],"import {ActionTypes, RootStateType} from \"./store\";\nimport {usersAPI} from \"../api/api\";\nimport {ThunkAction,ThunkDispatch} from \"redux-thunk\";\nimport {RootReduxStateType} from \"./redux-store\";\n\n\nexport const TOGGLE_FOLLOW = \"TOGGLE-FOLLOW\"\nexport const SET_USERS = \"SET-USERS\"\nexport const SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\"\nexport const SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\"\nexport const TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\"\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE-IS-FOLLOWING-PROGRESS\"\n\n\nexport type UserType = {\n    name: string,\n    id: number,\n    uniqueUrlName: string\n    photos: {\n        small: string\n        large: string\n    },\n    status: string,\n    followed: boolean,\n\n}\nexport type UsersPageType = {\n    users: Array<UserType>\n    pageSizes: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingProgress: Array<number> // массив id юзеров, по которым не завершены запросы на сервер\n}\n\n// начальные значения. нужны, чтобы передавать состояния части  state для его инициализации\nlet initialState: UsersPageType = {\n    users: [],\n    pageSizes: 5,\n    totalUsersCount: 100,\n    currentPage: 1,\n    isFetching: false,\n    followingProgress: []\n}\n//  редюсер для redux-store для  изменения части стэйта (dialogsPage)\nexport const usersReducer = (state: UsersPageType = initialState, action: ActionTypes) => {\n    switch (action.type) {\n        case TOGGLE_FOLLOW:  //смена  followed на обратное значение у конкретного user\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: action.userFollowed}\n                    }\n                    return u\n                })\n            }\n        //добавление в state новых users\n        case SET_USERS: {\n            return {...state, users: [...action.users]}\n        }\n        //изменение в state текущей страницы отбражение пользователей\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.totalUsersCount}\n        }\n        //отображение крутилки\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        // подписка /отписка от пользователя\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingProgress: action.isFetching\n                    ? [...state.followingProgress, action.userId]\n                    : state.followingProgress.filter(id => id !== action.userId)\n            }\n        }\n        default:\n            return state\n    }\n}\n// добавление типов action для страницы users\nexport type FollowUserActionType = ReturnType<typeof toggleFollow>\nexport type SetUserActionType = ReturnType<typeof setUsers>\nexport type SetCurrentPageActionType = ReturnType<typeof setCurrentPage>\nexport type SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\nexport type ToggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>\nexport type FollowingInProgressActionType = ReturnType<typeof toggleFollowingInProgress>\n//добавлены ActionCreator'ы для\n// toggleFollow - подписка/отписка от пользователя\n//setUsers- выбор списка users\n//setCurrentPage -  переключение страниц\n//setTotalUsersCount - выбор количества users на 1 странице\n//toggleIsFetching - для отображения процесса загрузки\n//toggleFollowingInProgress - для деактивации кнопки во время обрадотки сервером подписки-отписки\nexport const toggleFollow = (userId: number, userFollowed: boolean) => ({\n    type: TOGGLE_FOLLOW,\n    userId,\n    userFollowed\n}) as const\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount} as const)\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number) => (\n    {type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} as const)\n\nexport type ThunkType = ThunkAction<void, RootReduxStateType, unknown, ActionTypes>\n// ThunkCreator - функция, возвращающая thunk с обращением к серверу для\n// getUses -  получения списка пользователей\n//follow - подписку на пользователя\n//unfollow - отписку на пользователя\nexport const getUses = (currentPage: number, pageSizes: number): ThunkType => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true))\n        dispatch(setCurrentPage(currentPage))\n        usersAPI.getUsers(currentPage, pageSizes).then(data => {\n                dispatch(toggleIsFetching(false))\n                dispatch(setUsers(data.items))\n                dispatch(setTotalUsersCount(data.totalCount))\n            }\n        )\n    }\n}\nexport const follow = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingInProgress(true, userId))\n        usersAPI.followUser(userId)\n            .then(response => {\n                    if (response.resultCode === 0)\n                        dispatch(toggleFollow(userId, true))\n                    dispatch(toggleFollowingInProgress(false, userId))\n                }\n            )\n    }\n}\nexport const unFollow = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingInProgress(true, userId))\n        usersAPI.unfollowUser(userId)\n            .then(response => {\n                    if (response.resultCode === 0)\n                        dispatch(toggleFollow(userId, false))\n                    dispatch(toggleFollowingInProgress(false, userId))\n                }\n            )\n    }\n}\n","F:\\js\\project\\socialNetwork\\src\\components\\Users\\Users.tsx",["181","182"],"F:\\js\\project\\socialNetwork\\src\\components\\Users\\UsersContainer.tsx",["183"],"import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    UserType, toggleFollowingInProgress, getUses, follow, unFollow,\r\n} from \"../../redux/usersReducer\";\r\nimport {RootReduxStateType} from \"../../redux/redux-store\";\r\nimport PreLoader from \"../common/PreLoader/PreLoader\";\r\nimport {compose} from \"redux\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\n\r\n\r\ntype UsersContainerPropsType = {\r\n    isFetching: boolean\r\n    users: Array<UserType>\r\n    followingProgress: Array<number>\r\n    pageSizes: number\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    getUses: (currentPage: number, pageSizes: number) => void\r\n}\r\n//типизация стэйта для отдачи в пропсы\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n    pageSizes: number\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n    followingProgress: Array<number>\r\n\r\n}\r\n//типизация функций для отдачи в пропсы\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    getUses: (currentPage: number, pageSizes: number) => void\r\n}\r\n// функция получения из redux-store части стэйта (dialogsPage)\r\nlet mapStateToProps = (state: RootReduxStateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSizes: state.usersPage.pageSizes,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingProgress: state.usersPage.followingProgress\r\n    }\r\n}\r\n\r\n// в обучающих целях сделал UsersContainer классовым компонентом\r\nclass UsersContainer extends React.Component<UsersContainerPropsType, {}> {\r\n    componentDidMount() {\r\n        this.props.getUses(this.props.currentPage, this.props.pageSizes)\r\n    }\r\n\r\n    onPageClick = (page: number) => {\r\n        this.props.getUses(page, this.props.pageSizes)\r\n    }\r\n    render = () => {\r\n        return (\r\n            <>\r\n                {this.props.isFetching\r\n                    ? <PreLoader/>\r\n                    : <Users\r\n                        users={this.props.users}\r\n                        pageSizes={this.props.pageSizes}\r\n                        currentPage={this.props.currentPage}\r\n                        totalUsersCount={this.props.totalUsersCount}\r\n                        unFollow={this.props.unFollow}\r\n                        follow={this.props.follow}\r\n                        onPageClick={this.onPageClick}\r\n                        followingProgress={this.props.followingProgress}\r\n                    />}\r\n            </>)\r\n    }\r\n}\r\n// экспорт по дефолту обернут\r\nexport default compose <React.ComponentType>(\r\n    AuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootReduxStateType>\r\n    (mapStateToProps, {follow, unFollow, getUses}))\r\n(UsersContainer)","F:\\js\\project\\socialNetwork\\src\\components\\common\\PreLoader\\PreLoader.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileContainer.tsx",[],"F:\\js\\project\\socialNetwork\\src\\reportWebVitals.ts",[],["184","185"],"F:\\js\\project\\socialNetwork\\src\\redux\\authReducer.ts",[],"F:\\js\\project\\socialNetwork\\src\\components\\Header\\HeaderContainer.tsx",[],"F:\\js\\project\\socialNetwork\\src\\api\\api.ts",[],"F:\\js\\project\\socialNetwork\\src\\hoc\\AuthRedirect.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\common\\PreLoader\\ProfileStatus.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Login\\Login.tsx",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":13,"column":9,"nodeType":"192","endLine":13,"endColumn":28},{"ruleId":"186","replacedBy":"193"},{"ruleId":"188","replacedBy":"194"},{"ruleId":"190","severity":1,"message":"191","line":15,"column":13,"nodeType":"192","endLine":15,"endColumn":29},{"ruleId":"186","replacedBy":"195"},{"ruleId":"188","replacedBy":"196"},{"ruleId":"190","severity":1,"message":"191","line":22,"column":9,"nodeType":"192","endLine":22,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":27,"column":15,"nodeType":"192","endLine":27,"endColumn":55},{"ruleId":"190","severity":1,"message":"191","line":28,"column":10,"nodeType":"192","endLine":28,"endColumn":29},{"ruleId":"197","severity":1,"message":"198","line":1,"column":8,"nodeType":"199","messageId":"200","endLine":1,"endColumn":9},{"ruleId":"197","severity":1,"message":"198","line":1,"column":8,"nodeType":"199","messageId":"200","endLine":1,"endColumn":9},{"ruleId":"186","replacedBy":"201"},{"ruleId":"188","replacedBy":"202"},{"ruleId":"197","severity":1,"message":"198","line":1,"column":8,"nodeType":"199","messageId":"200","endLine":1,"endColumn":9},{"ruleId":"190","severity":1,"message":"191","line":9,"column":13,"nodeType":"192","endLine":9,"endColumn":31},{"ruleId":"186","replacedBy":"203"},{"ruleId":"188","replacedBy":"204"},{"ruleId":"186","replacedBy":"205"},{"ruleId":"188","replacedBy":"206"},{"ruleId":"197","severity":1,"message":"207","line":1,"column":8,"nodeType":"199","messageId":"200","endLine":1,"endColumn":13},{"ruleId":"197","severity":1,"message":"208","line":1,"column":22,"nodeType":"199","messageId":"200","endLine":1,"endColumn":35},{"ruleId":"197","severity":1,"message":"209","line":3,"column":21,"nodeType":"199","messageId":"200","endLine":3,"endColumn":34},{"ruleId":"197","severity":1,"message":"210","line":6,"column":9,"nodeType":"199","messageId":"200","endLine":6,"endColumn":17},{"ruleId":"197","severity":1,"message":"211","line":25,"column":9,"nodeType":"199","messageId":"200","endLine":25,"endColumn":25},{"ruleId":"197","severity":1,"message":"212","line":5,"column":15,"nodeType":"199","messageId":"200","endLine":5,"endColumn":40},{"ruleId":"186","replacedBy":"213"},{"ruleId":"188","replacedBy":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["215"],["216"],["215"],["216"],"@typescript-eslint/no-unused-vars","'s' is defined but never used.","Identifier","unusedVar",["215"],["216"],["215"],["216"],["215"],["216"],"'React' is defined but never used.","'RootStateType' is defined but never used.","'ThunkDispatch' is defined but never used.","'usersAPI' is defined but never used.","'a' is assigned a value but never used.","'toggleFollowingInProgress' is defined but never used.",["215"],["216"],"no-global-assign","no-unsafe-negation"]