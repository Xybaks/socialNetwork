[{"F:\\js\\project\\socialNetwork\\src\\index.tsx":"1","F:\\js\\project\\socialNetwork\\src\\redux\\store.ts":"2","F:\\js\\project\\socialNetwork\\src\\components\\Header\\Header.tsx":"3","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"4","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"5","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Dialogs.tsx":"6","F:\\js\\project\\socialNetwork\\src\\App.tsx":"7","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\Profile.tsx":"8","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"9","F:\\js\\project\\socialNetwork\\src\\components\\Navbar\\Navbar.tsx":"10","F:\\js\\project\\socialNetwork\\src\\components\\Settings\\Settings.tsx":"11","F:\\js\\project\\socialNetwork\\src\\components\\News\\News.tsx":"12","F:\\js\\project\\socialNetwork\\src\\components\\Music\\Music.tsx":"13","F:\\js\\project\\socialNetwork\\src\\redux\\profileReducer.ts":"14","F:\\js\\project\\socialNetwork\\src\\redux\\dialogsReducer.ts":"15","F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friend\\Friend.tsx":"16","F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friends.tsx":"17","F:\\js\\project\\socialNetwork\\src\\redux\\redux-store.ts":"18","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogItem\\Dialog.tsx":"19","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Message\\Message.tsx":"20","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"21","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogsContainer.tsx":"22","F:\\js\\project\\socialNetwork\\src\\StoreContext.tsx":"23","F:\\js\\project\\socialNetwork\\src\\redux\\usersReducer.ts":"24","F:\\js\\project\\socialNetwork\\src\\components\\Users\\Users.tsx":"25","F:\\js\\project\\socialNetwork\\src\\components\\Users\\UsersContainer.tsx":"26","F:\\js\\project\\socialNetwork\\src\\components\\common\\PreLoader\\PreLoader.tsx":"27","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileContainer.tsx":"28","F:\\js\\project\\socialNetwork\\src\\reportWebVitals.ts":"29","F:\\js\\project\\socialNetwork\\src\\redux\\authReducer.ts":"30","F:\\js\\project\\socialNetwork\\src\\components\\Header\\HeaderContainer.tsx":"31","F:\\js\\project\\socialNetwork\\src\\api\\api.ts":"32","F:\\js\\project\\socialNetwork\\src\\hoc\\AuthRedirect.tsx":"33","F:\\js\\project\\socialNetwork\\src\\components\\common\\PreLoader\\ProfileStatus.tsx":"34","F:\\js\\project\\socialNetwork\\src\\components\\Login\\Login.tsx":"35","F:\\js\\project\\socialNetwork\\src\\utils\\validators.ts":"36","F:\\js\\project\\socialNetwork\\src\\components\\common\\FormsControls\\FormsControls.tsx":"37"},{"size":705,"mtime":1612169401358,"results":"38","hashOfConfig":"39"},{"size":5587,"mtime":1612079884905,"results":"40","hashOfConfig":"39"},{"size":661,"mtime":1616538124974,"results":"41","hashOfConfig":"39"},{"size":1701,"mtime":1616368498938,"results":"42","hashOfConfig":"39"},{"size":554,"mtime":1611739717000,"results":"43","hashOfConfig":"39"},{"size":2144,"mtime":1616481763887,"results":"44","hashOfConfig":"39"},{"size":2099,"mtime":1614780084754,"results":"45","hashOfConfig":"39"},{"size":861,"mtime":1616359717121,"results":"46","hashOfConfig":"39"},{"size":1856,"mtime":1615568575322,"results":"47","hashOfConfig":"39"},{"size":1341,"mtime":1612212901996,"results":"48","hashOfConfig":"39"},{"size":135,"mtime":1611739717000,"results":"49","hashOfConfig":"39"},{"size":119,"mtime":1611739717000,"results":"50","hashOfConfig":"39"},{"size":123,"mtime":1611739717000,"results":"51","hashOfConfig":"39"},{"size":4144,"mtime":1616530230357,"results":"52","hashOfConfig":"39"},{"size":2000,"mtime":1616358003954,"results":"53","hashOfConfig":"39"},{"size":375,"mtime":1611474272568,"results":"54","hashOfConfig":"39"},{"size":766,"mtime":1611474263801,"results":"55","hashOfConfig":"39"},{"size":1415,"mtime":1615620893601,"results":"56","hashOfConfig":"39"},{"size":550,"mtime":1611739717000,"results":"57","hashOfConfig":"39"},{"size":276,"mtime":1611739717000,"results":"58","hashOfConfig":"39"},{"size":1255,"mtime":1616359710225,"results":"59","hashOfConfig":"39"},{"size":1723,"mtime":1616314786984,"results":"60","hashOfConfig":"39"},{"size":474,"mtime":1611993015099,"results":"61","hashOfConfig":"39"},{"size":6590,"mtime":1616537513325,"results":"62","hashOfConfig":"39"},{"size":2805,"mtime":1614759079261,"results":"63","hashOfConfig":"39"},{"size":3121,"mtime":1615453528738,"results":"64","hashOfConfig":"39"},{"size":199,"mtime":1613506748391,"results":"65","hashOfConfig":"39"},{"size":2743,"mtime":1616544558914,"results":"66","hashOfConfig":"39"},{"size":425,"mtime":1611739717000,"results":"67","hashOfConfig":"39"},{"size":3726,"mtime":1616544466451,"results":"68","hashOfConfig":"39"},{"size":956,"mtime":1616538216364,"results":"69","hashOfConfig":"39"},{"size":3093,"mtime":1616538675540,"results":"70","hashOfConfig":"39"},{"size":889,"mtime":1615453528753,"results":"71","hashOfConfig":"39"},{"size":1935,"mtime":1615614564983,"results":"72","hashOfConfig":"39"},{"size":2414,"mtime":1616540431781,"results":"73","hashOfConfig":"39"},{"size":273,"mtime":1616479910978,"results":"74","hashOfConfig":"39"},{"size":930,"mtime":1616480133390,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"eq6yew",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"F:\\js\\project\\socialNetwork\\src\\index.tsx",[],["169","170"],"F:\\js\\project\\socialNetwork\\src\\redux\\store.ts",[],"F:\\js\\project\\socialNetwork\\src\\components\\Header\\Header.tsx",["171"],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["172"],"import React from 'react';\nimport s from \"./Post.module.css\";\nimport pic from \"../../../pictures/avatar.jpg\";\nimport {PostsType} from \"../../../../redux/store\";\n\n\n\nconst Post: React.FC<PostsType> = (props) =>\n{\n    let like: string;\n    if (props.likesCount === 1) like = \"like\"\n    else like = \"likes\"\n    return (\n        <div className={`${s.item} ${s.active}`}>\n            <img src={pic}/>\n            {props.message}\n            <div className={s.item}> {props.likesCount} {like} {\n\n            }</div>\n        </div>\n\n    )\n}\n\nexport default Post;","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Dialogs.tsx",[],"F:\\js\\project\\socialNetwork\\src\\App.tsx",[],["173","174"],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\Profile.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["175","176","177"],"import React from 'react';\nimport skyline from \"../../pictures/ufo-banner2.gif\";\nimport s from \"./ProfileInfo.module.css\";\nimport {ProfileType} from \"../../../redux/profileReducer\";\nimport PreLoader from \"../../common/PreLoader/PreLoader\";\nimport ProfileStatus from \"../../common/PreLoader/ProfileStatus\";\nimport avatar from \"../../pictures/avatar3.png\"\n\n// skyline объект импорта  картинки профиля\ntype ProfileInfoType = {\n    profile: ProfileType | null\n    updateStatus: (status: string)=>void\n    status:string\n}\n\n\nconst ProfileInfo = (props: ProfileInfoType) => {\n    if (!props.profile) {\n        return <PreLoader/>\n    }\n    return (<div>\n        <img src={skyline}/>\n\n        <div> {props.profile.fullName}</div>\n        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n        <div>{props.profile.photos.large\n            ? <img src={props.profile?.photos.large}/>\n        :<img src={avatar}/>}\n        </div>\n        <div className={s.descriptionBlock}>\n            <div>aboutMe: {props.profile.aboutMe}</div>\n            <div> Contacts</div>\n            <div> facebook: {props.profile.contacts.facebook}</div>\n            <div>github: {props.profile.contacts.github}</div>\n            <div>instagram: {props.profile.contacts.instagram}</div>\n            <div>mainLink: {props.profile.contacts.mainLink}</div>\n            <div>twitter: {props.profile.contacts.twitter}</div>\n            <div> vk: {props.profile.contacts.vk}</div>\n            <div>website: {props.profile.contacts.website}</div>\n            <div>youtube: {props.profile.contacts.youtube}</div>\n            <div>lookingForAJob: {props.profile.lookingForAJob}</div>\n            <div>lookingForAJobDescription: {props.profile.lookingForAJobDescription}\n            </div>\n        </div>\n    </div>)\n}\n\nexport default ProfileInfo;","F:\\js\\project\\socialNetwork\\src\\components\\Navbar\\Navbar.tsx",[],["178","179"],"F:\\js\\project\\socialNetwork\\src\\components\\Settings\\Settings.tsx",["180"],"import s from \"./Settings.module.css\"\n\nfunction Settings (){\n    return(\n        <div > Settings </div>\n    )\n}\nexport default Settings",["181","182"],"F:\\js\\project\\socialNetwork\\src\\components\\News\\News.tsx",["183"],"import s from \"./News.module.css\"\n\nfunction News (){\n    return(\n        <div > News </div>\n    )\n}\nexport default News","F:\\js\\project\\socialNetwork\\src\\components\\Music\\Music.tsx",["184"],"import s from \"./Music.module.css\"\n\nfunction Music (){\n    return(\n        <div > Music </div>\n    )\n}\nexport default Music","F:\\js\\project\\socialNetwork\\src\\redux\\profileReducer.ts",[],"F:\\js\\project\\socialNetwork\\src\\redux\\dialogsReducer.ts",[],"F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friend\\Friend.tsx",["185"],"F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friends.tsx",[],"F:\\js\\project\\socialNetwork\\src\\redux\\redux-store.ts",[],["186","187"],"F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogItem\\Dialog.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Message\\Message.tsx",[],["188","189"],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["190"],"import React from 'react';\nimport MyPosts from \"./MyPosts\";\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\nimport {PostsType} from \"../../../redux/store\";\nimport {RootReduxStateType} from \"../../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\n\n\n//типизация стэйта для отдачи в пропсы\ntype MapStatePropsType = {\n    posts: Array<PostsType>\n}\n// типизация функций для отдачи в пропсы\ntype MapDispatchPropsType = {\n    addPost: (newPostText: string) => void\n}\n// функция получения из redux-store части стэйта (dialogsPage)\nlet mapStateToProps = (state: RootReduxStateType) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\n\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        //функция добавления поста в профайле\n        addPost: (newPostText: string) => {\n            dispatch(addPostActionCreator(newPostText))\n        }\n    }\n}\n\nconst MyPostsContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, RootReduxStateType>\n(mapStateToProps, mapDispatchToProps)(MyPosts);\n\n\nexport default MyPostsContainer",["191","192"],"F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"F:\\js\\project\\socialNetwork\\src\\StoreContext.tsx",[],"F:\\js\\project\\socialNetwork\\src\\redux\\usersReducer.ts",["193","194"],"import {ActionTypes, RootStateType} from \"./store\";\nimport {usersAPI} from \"../api/api\";\nimport {ThunkAction,ThunkDispatch} from \"redux-thunk\";\nimport {RootReduxStateType} from \"./redux-store\";\n\n\nexport const TOGGLE_FOLLOW = \"TOGGLE-FOLLOW\"\nexport const SET_USERS = \"SET-USERS\"\nexport const SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\"\nexport const SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\"\nexport const TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\"\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE-IS-FOLLOWING-PROGRESS\"\n\n\nexport type UserType = {\n    name: string,\n    id: number,\n    uniqueUrlName: string\n    photos: {\n        small: string\n        large: string\n    },\n    status: string,\n    followed: boolean,\n\n}\nexport type UsersPageType = {\n    users: Array<UserType>\n    pageSizes: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingProgress: Array<number> // массив id юзеров, по которым не завершены запросы на сервер\n}\n\n// начальные значения. нужны, чтобы передавать состояния части  state для его инициализации\nlet initialState: UsersPageType = {\n    users: [],\n    pageSizes: 5,\n    totalUsersCount: 100,\n    currentPage: 1,\n    isFetching: false,\n    followingProgress: []\n}\n//  редюсер для redux-store для  изменения части стэйта (dialogsPage)\nexport const usersReducer = (state: UsersPageType = initialState, action: ActionTypes) => {\n    switch (action.type) {\n        case TOGGLE_FOLLOW:  //смена  followed на обратное значение у конкретного user\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: action.userFollowed}\n                    }\n                    return u\n                })\n            }\n        //добавление в state новых users\n        case SET_USERS: {\n            return {...state, users: [...action.users]}\n        }\n        //изменение в state текущей страницы отбражение пользователей\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.totalUsersCount}\n        }\n        //отображение крутилки\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        // подписка /отписка от пользователя\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingProgress: action.isFetching\n                    ? [...state.followingProgress, action.userId]\n                    : state.followingProgress.filter(id => id !== action.userId)\n            }\n        }\n        default:\n            return state\n    }\n}\n// добавление типов action для страницы users\nexport type FollowUserActionType = ReturnType<typeof toggleFollow>\nexport type SetUserActionType = ReturnType<typeof setUsers>\nexport type SetCurrentPageActionType = ReturnType<typeof setCurrentPage>\nexport type SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\nexport type ToggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>\nexport type FollowingInProgressActionType = ReturnType<typeof toggleFollowingInProgress>\n//добавлены ActionCreator'ы для\n// toggleFollow - подписка/отписка от пользователя\n//setUsers- выбор списка users\n//setCurrentPage -  переключение страниц\n//setTotalUsersCount - выбор количества users на 1 странице\n//toggleIsFetching - для отображения процесса загрузки\n//toggleFollowingInProgress - для деактивации кнопки во время обрадотки сервером подписки-отписки\nexport const toggleFollow = (userId: number, userFollowed: boolean) => ({\n    type: TOGGLE_FOLLOW,\n    userId,\n    userFollowed\n}) as const\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount} as const)\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number) => (\n    {type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} as const)\n\nexport type ThunkType = ThunkAction<void, RootReduxStateType, unknown, ActionTypes>\n// ThunkCreator - функция, возвращающая thunk с обращением к серверу для\n// getUses -  получения списка пользователей\n//follow - подписку на пользователя\n//unfollow - отписку на пользователя\nexport const getUses = (currentPage: number, pageSizes: number): ThunkType => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true))\n        dispatch(setCurrentPage(currentPage))\n        usersAPI.getUsers(currentPage, pageSizes).then(data => {\n                dispatch(toggleIsFetching(false))\n                dispatch(setUsers(data.items))\n                dispatch(setTotalUsersCount(data.totalCount))\n            }\n        )\n    }\n}\nexport const follow = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingInProgress(true, userId))\n        usersAPI.followUser(userId)\n            .then(response => {\n                    if (response.resultCode === 0)\n                        dispatch(toggleFollow(userId, true))\n                    dispatch(toggleFollowingInProgress(false, userId))\n                }\n            )\n    }\n}\nexport const unFollow = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingInProgress(true, userId))\n        usersAPI.unfollowUser(userId)\n            .then(response => {\n                    if (response.resultCode === 0)\n                        dispatch(toggleFollow(userId, false))\n                    dispatch(toggleFollowingInProgress(false, userId))\n                }\n            )\n    }\n}\n",["195","196"],"F:\\js\\project\\socialNetwork\\src\\components\\Users\\Users.tsx",["197","198"],"import React from 'react';\nimport userIcon from \"../../asseds/images/userIcon.png\"\nimport s from \"./Users.module.css\"\nimport {UserType} from \"../../redux/usersReducer\";\nimport {NavLink} from \"react-router-dom\";\nimport {usersAPI} from \"../../api/api\";\n\ntype UsersPropsType = {\n    users: Array<UserType>\n    pageSizes: number\n    currentPage: number\n    totalUsersCount: number\n    unFollow: (userId: number) => void\n    follow: (userId: number) => void\n    onPageClick: (page: number) => void\n   followingProgress: Array<number>\n}\n\nlet Users: React.FC<UsersPropsType> = (props) => {\n    let PagesCount = Math.ceil(props.totalUsersCount / props.pageSizes)\n    let pages: Array<number> = []\n    for (let i = 1; i <= PagesCount; i++) {\n        pages.push(i)\n    }\n    let a: Array<number> = []\n\n\n    return (\n        <div>\n            <div>\n                {pages.map(page => {\n                    return <span key={page}\n                                 className={page === props.currentPage ? s.active : \"\"}\n                                 onClick={() => props.onPageClick(page)}>{page}</span>\n                })\n                }\n            </div>\n            {\n                props.users.map(user => <div key={user.id}>\n               <span>\n              <div>\n                 <NavLink to={\"/profile/\" + user.id}>\n                <img alt=\"user-photos-small\" className={s.icon}\n                     src={user.photos.small !== null ? user.photos.small : userIcon}/>\n                </NavLink>\n              </div>\n                   <div>\n                       {user.followed ?\n                           <button\n                               disabled={props.followingProgress.some(id => id === user.id)}\n                               onClick={() => {\n                                   props.unFollow(user.id)\n                               }}\n                           >Unfollow</button>\n                           : <button\n                               disabled={props.followingProgress.some(id => id === user.id)}\n                               onClick={() => {\n                                   props.follow(user.id)\n                               }}\n                           >Follow</button>}\n                               </div>\n                               </span>\n                    <span>\n                               <span>\n                               <div>{user.name}</div><div>{user.status}</div>\n                               </span>\n                               <span>\n                               <div>{\"user.location.country\"}</div>\n                               <div>{\"user.location.city\"}</div>\n                               </span>\n                               </span>\n                </div>)\n            }\n        </div>\n    )\n}\n\n\nexport default Users\n","F:\\js\\project\\socialNetwork\\src\\components\\Users\\UsersContainer.tsx",["199"],"import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    UserType, toggleFollowingInProgress, getUses, follow, unFollow,\r\n} from \"../../redux/usersReducer\";\r\nimport {RootReduxStateType} from \"../../redux/redux-store\";\r\nimport PreLoader from \"../common/PreLoader/PreLoader\";\r\nimport {compose} from \"redux\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\n\r\n\r\ntype UsersContainerPropsType = {\r\n    isFetching: boolean\r\n    users: Array<UserType>\r\n    followingProgress: Array<number>\r\n    pageSizes: number\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    getUses: (currentPage: number, pageSizes: number) => void\r\n}\r\n//типизация стэйта для отдачи в пропсы\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n    pageSizes: number\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n    followingProgress: Array<number>\r\n\r\n}\r\n//типизация функций для отдачи в пропсы\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    getUses: (currentPage: number, pageSizes: number) => void\r\n}\r\n// функция получения из redux-store части стэйта (dialogsPage)\r\nlet mapStateToProps = (state: RootReduxStateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSizes: state.usersPage.pageSizes,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingProgress: state.usersPage.followingProgress\r\n    }\r\n}\r\n\r\n// в обучающих целях сделал UsersContainer классовым компонентом\r\nclass UsersContainer extends React.Component<UsersContainerPropsType, {}> {\r\n    componentDidMount() {\r\n        this.props.getUses(this.props.currentPage, this.props.pageSizes)\r\n    }\r\n\r\n    onPageClick = (page: number) => {\r\n        this.props.getUses(page, this.props.pageSizes)\r\n    }\r\n    render = () => {\r\n        return (\r\n            <>\r\n                {this.props.isFetching\r\n                    ? <PreLoader/>\r\n                    : <Users\r\n                        users={this.props.users}\r\n                        pageSizes={this.props.pageSizes}\r\n                        currentPage={this.props.currentPage}\r\n                        totalUsersCount={this.props.totalUsersCount}\r\n                        unFollow={this.props.unFollow}\r\n                        follow={this.props.follow}\r\n                        onPageClick={this.onPageClick}\r\n                        followingProgress={this.props.followingProgress}\r\n                    />}\r\n            </>)\r\n    }\r\n}\r\n// экспорт по дефолту обернут\r\nexport default compose <React.ComponentType>(\r\n    AuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootReduxStateType>\r\n    (mapStateToProps, {follow, unFollow, getUses}))\r\n(UsersContainer)","F:\\js\\project\\socialNetwork\\src\\components\\common\\PreLoader\\PreLoader.tsx",[],["200","201"],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileContainer.tsx",[],"F:\\js\\project\\socialNetwork\\src\\reportWebVitals.ts",[],["202","203"],"F:\\js\\project\\socialNetwork\\src\\redux\\authReducer.ts",["204","205"],"F:\\js\\project\\socialNetwork\\src\\components\\Header\\HeaderContainer.tsx",[],"F:\\js\\project\\socialNetwork\\src\\api\\api.ts",[],"F:\\js\\project\\socialNetwork\\src\\hoc\\AuthRedirect.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\common\\PreLoader\\ProfileStatus.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Login\\Login.tsx",[],"F:\\js\\project\\socialNetwork\\src\\utils\\validators.ts",[],"F:\\js\\project\\socialNetwork\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":13,"column":9,"nodeType":"212","endLine":13,"endColumn":28},{"ruleId":"210","severity":1,"message":"211","line":15,"column":13,"nodeType":"212","endLine":15,"endColumn":29},{"ruleId":"206","replacedBy":"213"},{"ruleId":"208","replacedBy":"214"},{"ruleId":"210","severity":1,"message":"211","line":22,"column":9,"nodeType":"212","endLine":22,"endColumn":29},{"ruleId":"210","severity":1,"message":"211","line":27,"column":15,"nodeType":"212","endLine":27,"endColumn":55},{"ruleId":"210","severity":1,"message":"211","line":28,"column":10,"nodeType":"212","endLine":28,"endColumn":29},{"ruleId":"206","replacedBy":"215"},{"ruleId":"208","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":9},{"ruleId":"206","replacedBy":"221"},{"ruleId":"208","replacedBy":"222"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":9},{"ruleId":"217","severity":1,"message":"218","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":9},{"ruleId":"210","severity":1,"message":"211","line":9,"column":13,"nodeType":"212","endLine":9,"endColumn":31},{"ruleId":"206","replacedBy":"223"},{"ruleId":"208","replacedBy":"224"},{"ruleId":"206","replacedBy":"225"},{"ruleId":"208","replacedBy":"226"},{"ruleId":"217","severity":1,"message":"227","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"206","replacedBy":"228"},{"ruleId":"208","replacedBy":"229"},{"ruleId":"217","severity":1,"message":"230","line":1,"column":22,"nodeType":"219","messageId":"220","endLine":1,"endColumn":35},{"ruleId":"217","severity":1,"message":"231","line":3,"column":21,"nodeType":"219","messageId":"220","endLine":3,"endColumn":34},{"ruleId":"206","replacedBy":"232"},{"ruleId":"208","replacedBy":"233"},{"ruleId":"217","severity":1,"message":"234","line":6,"column":9,"nodeType":"219","messageId":"220","endLine":6,"endColumn":17},{"ruleId":"217","severity":1,"message":"235","line":25,"column":9,"nodeType":"219","messageId":"220","endLine":25,"endColumn":25},{"ruleId":"217","severity":1,"message":"236","line":5,"column":15,"nodeType":"219","messageId":"220","endLine":5,"endColumn":40},{"ruleId":"206","replacedBy":"237"},{"ruleId":"208","replacedBy":"238"},{"ruleId":"206","replacedBy":"239"},{"ruleId":"208","replacedBy":"240"},{"ruleId":"217","severity":1,"message":"241","line":4,"column":21,"nodeType":"219","messageId":"220","endLine":4,"endColumn":31},{"ruleId":"217","severity":1,"message":"242","line":70,"column":25,"nodeType":"219","messageId":"220","endLine":70,"endColumn":47},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["243"],["244"],["243"],["244"],"@typescript-eslint/no-unused-vars","'s' is defined but never used.","Identifier","unusedVar",["243"],["244"],["243"],["244"],["243"],["244"],"'React' is defined but never used.",["243"],["244"],"'RootStateType' is defined but never used.","'ThunkDispatch' is defined but never used.",["243"],["244"],"'usersAPI' is defined but never used.","'a' is assigned a value but never used.","'toggleFollowingInProgress' is defined but never used.",["243"],["244"],["243"],["244"],"'stopSubmit' is defined but never used.","'ErrorMessageFromServer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]