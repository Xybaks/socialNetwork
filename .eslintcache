[{"F:\\js\\project\\socialNetwork\\src\\index.tsx":"1","F:\\js\\project\\socialNetwork\\src\\redux\\store.ts":"2","F:\\js\\project\\socialNetwork\\src\\components\\Header\\Header.tsx":"3","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"4","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"5","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Dialogs.tsx":"6","F:\\js\\project\\socialNetwork\\src\\App.tsx":"7","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\Profile.tsx":"8","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"9","F:\\js\\project\\socialNetwork\\src\\components\\Navbar\\Navbar.tsx":"10","F:\\js\\project\\socialNetwork\\src\\components\\Settings\\Settings.tsx":"11","F:\\js\\project\\socialNetwork\\src\\components\\News\\News.tsx":"12","F:\\js\\project\\socialNetwork\\src\\components\\Music\\Music.tsx":"13","F:\\js\\project\\socialNetwork\\src\\redux\\profileReducer.ts":"14","F:\\js\\project\\socialNetwork\\src\\redux\\dialogsReducer.ts":"15","F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friend\\Friend.tsx":"16","F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friends.tsx":"17","F:\\js\\project\\socialNetwork\\src\\redux\\redux-store.ts":"18","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogItem\\Dialog.tsx":"19","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Message\\Message.tsx":"20","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"21","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogsContainer.tsx":"22","F:\\js\\project\\socialNetwork\\src\\StoreContext.tsx":"23","F:\\js\\project\\socialNetwork\\src\\redux\\usersReducer.ts":"24","F:\\js\\project\\socialNetwork\\src\\components\\Users\\Users.tsx":"25","F:\\js\\project\\socialNetwork\\src\\components\\Users\\UsersContainer.tsx":"26","F:\\js\\project\\socialNetwork\\src\\components\\common\\PreLoader\\PreLoader.tsx":"27","F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileContainer.tsx":"28","F:\\js\\project\\socialNetwork\\src\\reportWebVitals.ts":"29","F:\\js\\project\\socialNetwork\\src\\redux\\authReducer.ts":"30","F:\\js\\project\\socialNetwork\\src\\components\\Header\\HeaderContainer.tsx":"31","F:\\js\\project\\socialNetwork\\src\\api\\api.ts":"32"},{"size":705,"mtime":1612169401358,"results":"33","hashOfConfig":"34"},{"size":5587,"mtime":1612079884905,"results":"35","hashOfConfig":"34"},{"size":600,"mtime":1614779025592,"results":"36","hashOfConfig":"34"},{"size":1281,"mtime":1612171035647,"results":"37","hashOfConfig":"34"},{"size":554,"mtime":1611739717000,"results":"38","hashOfConfig":"34"},{"size":1804,"mtime":1612181607701,"results":"39","hashOfConfig":"34"},{"size":2048,"mtime":1614779757305,"results":"40","hashOfConfig":"34"},{"size":694,"mtime":1613760375486,"results":"41","hashOfConfig":"34"},{"size":1542,"mtime":1613809181373,"results":"42","hashOfConfig":"34"},{"size":1341,"mtime":1612212901996,"results":"43","hashOfConfig":"34"},{"size":135,"mtime":1611739717000,"results":"44","hashOfConfig":"34"},{"size":119,"mtime":1611739717000,"results":"45","hashOfConfig":"34"},{"size":123,"mtime":1611739717000,"results":"46","hashOfConfig":"34"},{"size":3640,"mtime":1614766993382,"results":"47","hashOfConfig":"34"},{"size":2736,"mtime":1612188810420,"results":"48","hashOfConfig":"34"},{"size":375,"mtime":1611474272568,"results":"49","hashOfConfig":"34"},{"size":766,"mtime":1611474263801,"results":"50","hashOfConfig":"34"},{"size":1279,"mtime":1614724531303,"results":"51","hashOfConfig":"34"},{"size":550,"mtime":1611739717000,"results":"52","hashOfConfig":"34"},{"size":276,"mtime":1611739717000,"results":"53","hashOfConfig":"34"},{"size":1625,"mtime":1613753120521,"results":"54","hashOfConfig":"34"},{"size":2925,"mtime":1612113768003,"results":"55","hashOfConfig":"34"},{"size":474,"mtime":1611993015099,"results":"56","hashOfConfig":"34"},{"size":6561,"mtime":1614766777656,"results":"57","hashOfConfig":"34"},{"size":2883,"mtime":1614756865407,"results":"58","hashOfConfig":"34"},{"size":3305,"mtime":1614759754853,"results":"59","hashOfConfig":"34"},{"size":199,"mtime":1613506748391,"results":"60","hashOfConfig":"34"},{"size":2101,"mtime":1614767170583,"results":"61","hashOfConfig":"34"},{"size":425,"mtime":1611739717000,"results":"62","hashOfConfig":"34"},{"size":1720,"mtime":1614778934009,"results":"63","hashOfConfig":"34"},{"size":920,"mtime":1614779288260,"results":"64","hashOfConfig":"34"},{"size":1419,"mtime":1614766063153,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"eq6yew",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\js\\project\\socialNetwork\\src\\index.tsx",[],["141","142"],"F:\\js\\project\\socialNetwork\\src\\redux\\store.ts",[],"F:\\js\\project\\socialNetwork\\src\\components\\Header\\Header.tsx",["143"],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["144"],"import React from 'react';\nimport s from \"./Post.module.css\";\nimport pic from \"../../../pictures/avatar.jpg\";\nimport {PostsType} from \"../../../../redux/store\";\n\n\n\nconst Post: React.FC<PostsType> = (props) =>\n{\n    let like: string;\n    if (props.likesCount === 1) like = \"like\"\n    else like = \"likes\"\n    return (\n        <div className={`${s.item} ${s.active}`}>\n            <img src={pic}/>\n            {props.message}\n            <div className={s.item}> {props.likesCount} {like} {\n\n            }</div>\n        </div>\n\n    )\n}\n\nexport default Post;","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Dialogs.tsx",[],["145","146"],"F:\\js\\project\\socialNetwork\\src\\App.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\Profile.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["147","148"],"F:\\js\\project\\socialNetwork\\src\\components\\Navbar\\Navbar.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Settings\\Settings.tsx",["149"],"import s from \"./Settings.module.css\"\n\nfunction Settings (){\n    return(\n        <div > Settings </div>\n    )\n}\nexport default Settings","F:\\js\\project\\socialNetwork\\src\\components\\News\\News.tsx",["150"],"import s from \"./News.module.css\"\n\nfunction News (){\n    return(\n        <div > News </div>\n    )\n}\nexport default News","F:\\js\\project\\socialNetwork\\src\\components\\Music\\Music.tsx",["151"],"import s from \"./Music.module.css\"\n\nfunction Music (){\n    return(\n        <div > Music </div>\n    )\n}\nexport default Music","F:\\js\\project\\socialNetwork\\src\\redux\\profileReducer.ts",["152","153"],"import {ActionTypes, ProfilePageType} from \"./store\";\nimport {usersAPI} from \"../api/api\";\nimport {ThunkType, toggleFollow, toggleFollowingInProgress} from \"./usersReducer\";\n\nexport const ADD_POST = \"ADD-POST\"\nexport const UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\"\nexport const SET_USER_PROFILE = \"SET-USER-PROFILE\"\n\nexport type ProfileType = {\n    aboutMe: string\n    contacts: {\n        facebook: string\n        github: string\n        instagram: string\n        mainLink: string\n        twitter: string\n        vk: string\n        website: string\n        youtube: string\n    }\n    fullName: string\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    photos: {\n        large: string | undefined\n        small: string | undefined\n    }\n    userId: number\n}\n\nlet initialState = {\n    posts: [\n        {id: 1, message: \"Hello\", likesCount: 1},\n        {id: 2, message: \"How hi your IT\", likesCount: 5},\n        {id: 3, message: \"new meat in our garden\", likesCount: 11},\n        {id: 4, message: \"hey\", likesCount: 1},\n        {id: 5, message: \"YO\", likesCount: 1}\n    ],\n    newPostText: \"\",\n    profile: null\n}\nexport const profileReducer = (state: ProfilePageType = initialState, action: ActionTypes) => {\n    switch (action.type) {\n        case ADD_POST: //добавление функции добавления поста в компоненту Profile\n        {\n\n            if (state.newPostText.replace(/\\s/g, '') !== \"\") {\n                return {\n                    ...state,\n                    posts: [{id: 5, message: state.newPostText, likesCount: 0}, ...state.posts],\n                    newPostText: \"\"\n                };\n            }\n            return state\n        }\n\n        case UPDATE_NEW_POST_TEXT: //   обновление текста, введенного в MyPosts\n            if (action.newText !== \"\") {\n                //возврат копии state для того, чтобы connect видел , что state менялся\n                return {\n                    ...state,\n                    newPostText: action.newText\n                }\n            }\n            return state;\n\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        default: // возврат по дефолту (по идее никогда не пригодится)\n            return state\n    }\n}\n// добавление типов action для страницы profile\nexport type AddPostActionType = ReturnType<typeof addPostActionCreator>\nexport type UpdateNewPostTextType = ReturnType<typeof updateNewPostActionCreator>\nexport type setUserProfileType = ReturnType<typeof setUserProfile>\n\n// добавление  ActionCreator-в для для страницы profile\n//добавление постов\nexport const addPostActionCreator = (postText: string) =>\n    ({type: ADD_POST, newPostText: postText}) as const\n//обновление текста  нового поста  newPostText в state\nexport const updateNewPostActionCreator = (newText: string) =>\n    ({type: UPDATE_NEW_POST_TEXT, newText: newText}) as const\n// выбор отображаемого профайла\nexport const setUserProfile = (profile: ProfileType) =>\n    ({type: SET_USER_PROFILE, profile} as const)\n\n// ThunkCreator - функция, возвращающая thunk с обращением к серверу для\nexport const getUserProfile = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        usersAPI.getProfile(userId).then(response => {\n                dispatch(setUserProfile(response.data))\n            }\n        )\n    }\n}","F:\\js\\project\\socialNetwork\\src\\redux\\dialogsReducer.ts",[],"F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friend\\Friend.tsx",["154"],"F:\\js\\project\\socialNetwork\\src\\components\\Friends\\Friends.tsx",[],"F:\\js\\project\\socialNetwork\\src\\redux\\redux-store.ts",[],["155","156"],"F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogItem\\Dialog.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\Message\\Message.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["157"],"import React from 'react';\nimport MyPosts from \"./MyPosts\";\nimport {addPostActionCreator, updateNewPostActionCreator} from \"../../../redux/profileReducer\";\nimport {PostsType} from \"../../../redux/store\";\nimport {RootReduxStateType} from \"../../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\n\n\n\n//типизация стэйта для отдачи в пропсы\ntype MapStatePropsType = {\n    posts: Array<PostsType>\n    newPostText: string\n}\n// типизация функций для отдачи в пропсы\ntype MapDispatchPropsType = {\n    addPost: (newPostText: string) => void\n    updateNewPostText : (newText: string) =>void\n}\n// функция получения из redux-store части стэйта (dialogsPage)\nlet mapStateToProps = (state: RootReduxStateType) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText:state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        //функция добавления поста в профайле\n        addPost: (newPostText: string)=> {\n            dispatch(addPostActionCreator(newPostText))\n        },\n        //  функция обновления вводимого текста в профайле\n        updateNewPostText: (newText: string) => {\n            dispatch(updateNewPostActionCreator(newText))\n        }\n    }\n}\n\nconst MyPostsContainer = connect <MapStatePropsType, MapDispatchPropsType, {}, RootReduxStateType>\n(mapStateToProps,mapDispatchToProps)(MyPosts);\n\n\nexport default MyPostsContainer","F:\\js\\project\\socialNetwork\\src\\components\\Dialogs\\DialogsContainer.tsx",["158"],"import React from \"react\"\nimport {DialogsPageType} from \"../../redux/store\";\nimport Dialogs from \"./Dialogs\";\nimport {RootReduxStateType} from \"../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {SendMessageActionCreator, UpdateNewMessageBodyActionCreator} from \"../../redux/dialogsReducer\";\n\ntype MapStatePropsType = {\n    dialogsPage: DialogsPageType\n}\n\ntype MapDispatchPropsType = {\n    onMessageChange: (newMessageText: string) => void\n    onSendMessageClick: () => void\n}\n// функция получения из redux-store части стэйта (dialogsPage)\nlet mapStateToProps = (state: RootReduxStateType) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n// получение через dispatch функций управления части стэйта redux-store\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        onMessageChange: (newMessageText:string) => {\n            dispatch(UpdateNewMessageBodyActionCreator(newMessageText));\n        },\n        //  функция добавления message\n        onSendMessageClick: () => {\n            dispatch(SendMessageActionCreator())\n        }\n    }\n}\nconst DialogsContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, RootReduxStateType>\n(mapStateToProps,mapDispatchToProps)(Dialogs);\n\n\n\n// const DialogsContainer = () => {\n// let state = props.store.getState()\n    //  функция добавления message\n    // const onSendMessageClick=()=> {\n    //     if (state.dialogs.newMessageText!==\"\") {\n    //         props.store.dispatch(SendMessageActionCreator(state.dialogs.newMessageText))\n    //     }\n// }\n// коллбэк  ввода message\n//     function onMessageChange (newText:string) {\n//         props.store.dispatch(UpdateNewMessageBodyActionCreator(newText))\n//     }\n//     return (\n//         <StoreContext.Consumer>\n//             {store => {\n//                 let state = store.getState().dialogs\n//                 //  функция добавления message\n//                 const onSendMessageClick = () => {\n//                     if (state.newMessageText !== \"\") {\n//                         store.dispatch(SendMessageActionCreator(state.newMessageText))\n//                     }\n//                 }\n//                 // коллбэк  ввода message\n//                 const onMessageChange=(newText: string)=> {\n//                     store.dispatch(UpdateNewMessageBodyActionCreator(newText))\n//                 }\n//\n//                 return (\n//                     <Dialogs\n//                         dialogsPage={state}\n//                         onMessageChange={onMessageChange}\n//                         onSendMessageClick={onSendMessageClick}\n//                     />)\n//             }\n//             }\n//         </StoreContext.Consumer>)\n// }\nexport default DialogsContainer","F:\\js\\project\\socialNetwork\\src\\StoreContext.tsx",[],"F:\\js\\project\\socialNetwork\\src\\redux\\usersReducer.ts",[],"F:\\js\\project\\socialNetwork\\src\\components\\Users\\Users.tsx",["159","160"],"F:\\js\\project\\socialNetwork\\src\\components\\Users\\UsersContainer.tsx",["161"],"F:\\js\\project\\socialNetwork\\src\\components\\common\\PreLoader\\PreLoader.tsx",[],"F:\\js\\project\\socialNetwork\\src\\components\\Profile\\ProfileContainer.tsx",["162"],"F:\\js\\project\\socialNetwork\\src\\reportWebVitals.ts",[],["163","164"],"F:\\js\\project\\socialNetwork\\src\\redux\\authReducer.ts",[],"F:\\js\\project\\socialNetwork\\src\\components\\Header\\HeaderContainer.tsx",[],"F:\\js\\project\\socialNetwork\\src\\api\\api.ts",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":13,"column":9,"nodeType":"171","endLine":13,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":15,"column":13,"nodeType":"171","endLine":15,"endColumn":29},{"ruleId":"165","replacedBy":"172"},{"ruleId":"167","replacedBy":"173"},{"ruleId":"169","severity":1,"message":"170","line":18,"column":9,"nodeType":"171","endLine":18,"endColumn":29},{"ruleId":"169","severity":1,"message":"170","line":21,"column":13,"nodeType":"171","endLine":21,"endColumn":53},{"ruleId":"174","severity":1,"message":"175","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":9},{"ruleId":"174","severity":1,"message":"175","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":9},{"ruleId":"174","severity":1,"message":"175","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":9},{"ruleId":"174","severity":1,"message":"178","line":3,"column":20,"nodeType":"176","messageId":"177","endLine":3,"endColumn":32},{"ruleId":"174","severity":1,"message":"179","line":3,"column":34,"nodeType":"176","messageId":"177","endLine":3,"endColumn":59},{"ruleId":"169","severity":1,"message":"170","line":9,"column":13,"nodeType":"171","endLine":9,"endColumn":31},{"ruleId":"165","replacedBy":"180"},{"ruleId":"167","replacedBy":"181"},{"ruleId":"174","severity":1,"message":"182","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":13},{"ruleId":"174","severity":1,"message":"182","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":13},{"ruleId":"174","severity":1,"message":"183","line":6,"column":9,"nodeType":"176","messageId":"177","endLine":6,"endColumn":17},{"ruleId":"174","severity":1,"message":"184","line":26,"column":9,"nodeType":"176","messageId":"177","endLine":26,"endColumn":25},{"ruleId":"174","severity":1,"message":"179","line":5,"column":15,"nodeType":"176","messageId":"177","endLine":5,"endColumn":40},{"ruleId":"174","severity":1,"message":"185","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"165","replacedBy":"186"},{"ruleId":"167","replacedBy":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["188"],["189"],"@typescript-eslint/no-unused-vars","'s' is defined but never used.","Identifier","unusedVar","'toggleFollow' is defined but never used.","'toggleFollowingInProgress' is defined but never used.",["188"],["189"],"'React' is defined but never used.","'usersAPI' is defined but never used.","'a' is assigned a value but never used.","'axios' is defined but never used.",["188"],["189"],"no-global-assign","no-unsafe-negation"]